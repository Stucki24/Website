<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spyer GmbH - Trading Bot Revolution</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #0a0a23 0%, #1a1a3e 50%, #2d1b69 100%);
            color: white;
            font-family: 'Arial', sans-serif;
            overflow-x: hidden;
            min-height: 100vh;
        }

        /* Animated stars background */
        .stars {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
        }

        .star {
            position: absolute;
            background: white;
            border-radius: 50%;
            animation: twinkle 3s infinite;
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0.3; }
            50% { opacity: 1; }
        }

        /* Header */
        .header {
            position: relative;
            z-index: 10;
            padding: 2rem;
            text-align: center;
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            border-bottom: 2px solid #00ffff;
        }

        .logo {
            font-size: 3rem;
            font-weight: bold;
            background: linear-gradient(45deg, #00ffff, #ff00ff, #ffff00);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 0.5rem;
            text-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
        }

        .tagline {
            font-size: 1.2rem;
            color: #00ffff;
            margin-bottom: 2rem;
        }

        /* Main Container */
        .container {
            position: relative;
            z-index: 5;
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        /* Tab Navigation */
        .tab-nav {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .tab-btn {
            background: linear-gradient(45deg, #1a1a3e, #2d1b69);
            border: 2px solid #00ffff;
            color: white;
            padding: 1rem 2rem;
            font-size: 1.1rem;
            cursor: pointer;
            border-radius: 20px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .tab-btn:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 255, 255, 0.3);
        }

        .tab-btn.active {
            background: linear-gradient(45deg, #00ffff, #ff00ff);
            color: black;
            box-shadow: 0 0 30px rgba(0, 255, 255, 0.8);
        }

        /* Roadmap Container */
        .roadmap-container {
            display: none;
            background: rgba(0, 0, 0, 0.4);
            border-radius: 20px;
            padding: 2rem;
            border: 2px solid #00ffff;
            position: relative;
            backdrop-filter: blur(10px);
        }

        .roadmap-container.active {
            display: block;
        }

        .roadmap-title {
            text-align: center;
            font-size: 2rem;
            margin-bottom: 2rem;
            background: linear-gradient(45deg, #00ffff, #ff00ff);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        /* Rocket */
        .rocket {
            position: absolute;
            right: 20px;
            top: 50px;
            width: 60px;
            height: 80px;
            transition: all 0.5s ease;
            z-index: 10;
        }

        .rocket svg {
            width: 100%;
            height: 100%;
            filter: drop-shadow(0 0 10px #00ffff);
        }

        /* Roadmap Items */
        .roadmap-items {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            padding-right: 100px;
        }

        .roadmap-item {
            display: flex;
            align-items: center;
            background: rgba(255, 255, 255, 0.1);
            padding: 1.5rem;
            border-radius: 15px;
            border: 2px solid transparent;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .roadmap-item:hover {
            border-color: #00ffff;
            transform: translateX(10px);
            box-shadow: 0 5px 20px rgba(0, 255, 255, 0.3);
        }

        .roadmap-item.completed {
            background: linear-gradient(45deg, rgba(0, 255, 255, 0.2), rgba(255, 0, 255, 0.2));
            border-color: #00ff00;
        }

        .roadmap-item.completed::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            animation: shimmer 2s infinite;
        }

        @keyframes shimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        .roadmap-checkbox {
            margin-right: 1rem;
            width: 25px;
            height: 25px;
            cursor: pointer;
            position: relative;
        }

        .roadmap-checkbox input {
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .roadmap-text {
            font-size: 1.1rem;
            flex-grow: 1;
        }

        /* Progress Bar */
        .progress-container {
            margin-top: 2rem;
            background: rgba(0, 0, 0, 0.5);
            border-radius: 20px;
            padding: 1rem;
            border: 2px solid #00ffff;
        }

        .progress-bar {
            width: 100%;
            height: 20px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            overflow: hidden;
            position: relative;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #00ffff, #ff00ff, #ffff00);
            border-radius: 10px;
            transition: width 0.5s ease;
            position: relative;
        }

        .progress-fill::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            animation: progress-shimmer 2s infinite;
        }

        @keyframes progress-shimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        .progress-text {
            text-align: center;
            margin-top: 1rem;
            font-size: 1.2rem;
            color: #00ffff;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .logo {
                font-size: 2rem;
            }
            
            .tab-nav {
                flex-direction: column;
                align-items: center;
                gap: 1rem;
            }
            
            .roadmap-items {
                padding-right: 20px;
            }
            
            .rocket {
                right: 10px;
                width: 40px;
                height: 60px;
            }
            
            .roadmap-item {
                padding: 1rem;
            }
        }

        /* Particle effects */
        .particle {
            position: absolute;
            background: #00ffff;
            border-radius: 50%;
            pointer-events: none;
            animation: float 6s infinite ease-in-out;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.7; }
            50% { transform: translateY(-20px) rotate(180deg); opacity: 1; }
        }
    </style>
</head>
<body>
    <!-- Animated Stars Background -->
    <div class="stars" id="stars"></div>

    <!-- Header -->
    <div class="header">
        <div class="logo">SPYER GmbH</div>
        <div class="tagline">ðŸš€ Trading Bot Revolution - Von Zero zu Hero ðŸš€</div>
    </div>

    <!-- Main Container -->
    <div class="container">
        <!-- Tab Navigation -->
        <div class="tab-nav">
            <button class="tab-btn active" onclick="switchTab('kurzfristig')">Kurzfristige Roadmap</button>
            <button class="tab-btn" onclick="switchTab('langfristig')">Langfristige Roadmap</button>
        </div>

        <!-- Kurzfristige Roadmap -->
        <div class="roadmap-container active" id="kurzfristig">
            <div class="roadmap-title">ðŸŽ¯ Kurzfristige Ziele (3-6 Monate)</div>
            
            <!-- Rocket -->
            <div class="rocket" id="rocket-kurz">
                <svg viewBox="0 0 100 120" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M50 10 L35 40 L50 35 L65 40 Z" fill="#00ffff"/>
                    <path d="M45 40 L45 80 L55 80 L55 40" fill="#ff00ff"/>
                    <circle cx="50" cy="55" r="8" fill="#ffff00"/>
                    <path d="M40 80 L35 100 L45 85 Z" fill="#ff4444"/>
                    <path d="M60 80 L65 100 L55 85 Z" fill="#ff4444"/>
                    <path d="M45 80 L50 100 L55 80 Z" fill="#ff6666"/>
                </svg>
            </div>

            <div class="roadmap-items" id="items-kurz">
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('kurzfristig')">
                    </div>
                    <div class="roadmap-text">Bot lÃ¤uft stabil und 24/7</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('kurzfristig')">
                    </div>
                    <div class="roadmap-text">Kauf der ersten Funded Challenge</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('kurzfristig')">
                    </div>
                    <div class="roadmap-text">Bot lÃ¤uft profitabel</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('kurzfristig')">
                    </div>
                    <div class="roadmap-text">Kauf der zweiten Funded Challenge</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('kurzfristig')">
                    </div>
                    <div class="roadmap-text">Erste Funded Challenge Gewonnen</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('kurzfristig')">
                    </div>
                    <div class="roadmap-text">800k Funded Kapital</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('kurzfristig')">
                    </div>
                    <div class="roadmap-text">50k Gewinn im Monat</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('kurzfristig')">
                    </div>
                    <div class="roadmap-text">100k Gewinn im Monat</div>
                </div>
            </div>

            <div class="progress-container">
                <div class="progress-bar">
                    <div class="progress-fill" id="progress-kurz" style="width: 0%"></div>
                </div>
                <div class="progress-text" id="progress-text-kurz">0% abgeschlossen</div>
            </div>
        </div>

        <!-- Langfristige Roadmap -->
        <div class="roadmap-container" id="langfristig">
            <div class="roadmap-title">ðŸŒŒ Langfristige Vision (1-3 Jahre)</div>
            
            <!-- Rocket -->
            <div class="rocket" id="rocket-lang">
                <svg viewBox="0 0 100 120" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M50 10 L35 40 L50 35 L65 40 Z" fill="#00ffff"/>
                    <path d="M45 40 L45 80 L55 80 L55 40" fill="#ff00ff"/>
                    <circle cx="50" cy="55" r="8" fill="#ffff00"/>
                    <path d="M40 80 L35 100 L45 85 Z" fill="#ff4444"/>
                    <path d="M60 80 L65 100 L55 85 Z" fill="#ff4444"/>
                    <path d="M45 80 L50 100 L55 80 Z" fill="#ff6666"/>
                </svg>
            </div>

            <div class="roadmap-items" id="items-lang">
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">1.000.000 Funded Kapital</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">250k Gewinn im Monat</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">Eigenes BÃ¼ro</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">1 Immobilie</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">Dienstwagen</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">5.000.000 Funded Kapital</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">300k Gewinn im Monat</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">Erster Mitarbeiter</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">10.000.000 Funded Kapital</div>
                </div>
                <div class="roadmap-item">
                    <div class="roadmap-checkbox">
                        <input type="checkbox" onchange="updateProgress('langfristig')">
                    </div>
                    <div class="roadmap-text">1.000.000 Euro Gewinn im Monat</div>
                </div>
            </div>

            <div class="progress-container">
                <div class="progress-bar">
                    <div class="progress-fill" id="progress-lang" style="width: 0%"></div>
                </div>
                <div class="progress-text" id="progress-text-lang">0% abgeschlossen</div>
            </div>
        </div>
    </div>

    <script>
        // Create animated stars
        function createStars() {
            const starsContainer = document.getElementById('stars');
            const numStars = 100;

            for (let i = 0; i < numStars; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                
                const size = Math.random() * 3 + 1;
                star.style.width = size + 'px';
                star.style.height = size + 'px';
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.animationDelay = Math.random() * 3 + 's';
                
                starsContainer.appendChild(star);
            }
        }

        // Switch between tabs
        function switchTab(tabName) {
            // Hide all containers
            document.querySelectorAll('.roadmap-container').forEach(container => {
                container.classList.remove('active');
            });
            
            // Remove active class from all tabs
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // Show selected container
            document.getElementById(tabName).classList.add('active');
            
            // Add active class to clicked tab
            event.target.classList.add('active');
        }

        // Update progress and rocket position
        function updateProgress(roadmapType) {
            const container = document.getElementById(roadmapType);
            const checkboxes = container.querySelectorAll('input[type="checkbox"]');
            const items = container.querySelectorAll('.roadmap-item');
            const progressFill = document.getElementById('progress-' + (roadmapType === 'kurzfristig' ? 'kurz' : 'lang'));
            const progressText = document.getElementById('progress-text-' + (roadmapType === 'kurzfristig' ? 'kurz' : 'lang'));
            const rocket = document.getElementById('rocket-' + (roadmapType === 'kurzfristig' ? 'kurz' : 'lang'));
            
            let completed = 0;
            checkboxes.forEach((checkbox, index) => {
                if (checkbox.checked) {
                    completed++;
                    items[index].classList.add('completed');
                } else {
                    items[index].classList.remove('completed');
                }
            });
            
            const percentage = (completed / checkboxes.length) * 100;
            progressFill.style.width = percentage + '%';
            progressText.textContent = Math.round(percentage) + '% abgeschlossen';
            
            // Move rocket based on progress
            const rocketPosition = 50 + (percentage / 100) * (items.length * 80);
            rocket.style.top = rocketPosition + 'px';
            
            // Add special effects when completed
            if (percentage === 100) {
                rocket.style.transform = 'scale(1.2) rotate(10deg)';
                rocket.style.filter = 'drop-shadow(0 0 20px #00ffff) drop-shadow(0 0 40px #ff00ff)';
                
                // Create celebration particles
                createParticles(rocket);
            } else {
                rocket.style.transform = 'scale(1) rotate(0deg)';
                rocket.style.filter = 'drop-shadow(0 0 10px #00ffff)';
            }
        }

        // Create celebration particles
        function createParticles(element) {
            for (let i = 0; i < 10; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                
                const size = Math.random() * 4 + 2;
                particle.style.width = size + 'px';
                particle.style.height = size + 'px';
                particle.style.left = (element.offsetLeft + Math.random() * 60) + 'px';
                particle.style.top = (element.offsetTop + Math.random() * 80) + 'px';
                particle.style.animationDelay = Math.random() * 2 + 's';
                
                element.parentElement.appendChild(particle);
                
                // Remove particle after animation
                setTimeout(() => {
                    particle.remove();
                }, 6000);
            }
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            createStars();
            
            // Initialize progress for both roadmaps
            updateProgress('kurzfristig');
            updateProgress('langfristig');
        });

        // Add some interactive hover effects
        document.addEventListener('mousemove', function(e) {
            const rockets = document.querySelectorAll('.rocket');
            rockets.forEach(rocket => {
                const rect = rocket.getBoundingClientRect();
                const x = e.clientX - rect.left - rect.width / 2;
                const y = e.clientY - rect.top - rect.height / 2;
                
                if (Math.abs(x) < 100 && Math.abs(y) < 100) {
                    rocket.style.transform += ` translate(${x * 0.1}px, ${y * 0.1}px)`;
                }
            });
        });
    </script>
</body>
</html>